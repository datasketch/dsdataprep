agg_name = NULL,
group_var = c("cut"))
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = c("x", "y"),
agg_name = c("Suma x", "Suma y"),
group_var = c("cut"),
percentage = TRUE)
View(data_result)
View(data_expect)
data_expect <- data |>
dplyr::group_by(cut) |>
dplyr::summarise(`Suma x` = sum(x, na.rm = TRUE),
`Suma y` = sum(y, na.rm = TRUE)) |>
dplyr::mutate(`..percentage Suma x` = `Suma x`/sum(`Suma x`, na.rm = T) * 100,
`..percentage Suma y` = `Suma y`/sum(`Suma y`, na.rm = T) * 100)
expect_equal(data_result, data_expect)
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = c("x", "y"),
agg_name = NULL,
group_var = c("cut"))
data_expect <- data |>
dplyr::group_by(cut) |>
dplyr::summarise(x = sum(x, na.rm = TRUE),
y = sum(y, na.rm = TRUE))
expect_equal(data_result, data_expect)
data_result <- aggregation_data(data = data,
agg = "mean",
to_agg = "x",
agg_name = "Promedio",
group_var = c("clarity", "cut"))
data_expect <- data |>
dplyr::group_by(clarity, cut) |>
dplyr::summarise(Promedio = mean(x, na.rm = TRUE))
expect_equal(data_result, data_expect)
data <- data.frame(name = c("D", "E", "F"), y = c(15, 25, 35))
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = "y",
group_var = "name")
expect_equal(data_result, data, ignore_attr = TRUE)
test_that("Aggregation", {
data <- ggplot2::diamonds
# dataptc <- data |> select(cut, color, price)
# data_result <- aggregation_data(data = dataptc,
#                                 agg = "mean", to_agg = "price",
#                                 group_var = c("cut", "color"),
#                                 percentage = TRUE,
#                                 percentage_col = "color")
data <- data[1:100,]
data$otra <- rep(1:5, 20)
# Without percentage
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = "otra",
agg_name = "otra",
group_var = c("cut"),
extra_col = FALSE,
extra_group = "clarity",
collapse_columns = "clarity",
numeric_collapse_columns = "y"
#agg_extra = NULL
)
data_expect <- data |>
dplyr::group_by(cut) |>
dplyr::summarise(otra = sum(otra))
expect_equal(data_result, data_expect)
# With percentage
data_result <- aggregation_data(data = data,
agg = "count",
to_agg = NULL,
agg_name = "Conteo",
group_var = c("cut", "color"),
percentage = TRUE)
data_expect <- data |>
dplyr::group_by(cut, color) |>
dplyr::summarise(Conteo = n()) |>
dplyr::mutate(..percentage = (Conteo / sum(Conteo))*100)
expect_equal(data_result, data_expect)
data_result <- aggregation_data(data = data,
agg = "count",
to_agg = NULL,
agg_name = "Conteo",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_name = "Porcentaje")
data_expect <- data |>
dplyr::group_by(cut, color) |>
dplyr::summarise(Conteo = dplyr::n()) |>
dplyr::mutate(Porcentaje = (Conteo / sum(Conteo))*100)
expect_equal(data_result, data_expect)
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = c("x", "y"),
agg_name = c("Suma x", "Suma y"),
group_var = c("cut"))
data_expect <- data |>
dplyr::group_by(cut) |>
dplyr::summarise(`Suma x` = sum(x, na.rm = TRUE),
`Suma y` = sum(y, na.rm = TRUE))
expect_equal(data_result, data_expect)
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = c("x", "y"),
agg_name = c("Suma x", "Suma y"),
group_var = c("cut"),
percentage = TRUE)
data_expect <- data |>
dplyr::group_by(cut) |>
dplyr::summarise(`Suma x` = sum(x, na.rm = TRUE),
`Suma y` = sum(y, na.rm = TRUE)) |>
dplyr::mutate(`..percentage Suma x` = `Suma x`/sum(`Suma x`, na.rm = T) * 100,
`..percentage Suma y` = `Suma y`/sum(`Suma y`, na.rm = T) * 100)
expect_equal(data_result, data_expect)
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = c("x", "y"),
agg_name = NULL,
group_var = c("cut"))
data_expect <- data |>
dplyr::group_by(cut) |>
dplyr::summarise(x = sum(x, na.rm = TRUE),
y = sum(y, na.rm = TRUE))
expect_equal(data_result, data_expect)
data_result <- aggregation_data(data = data,
agg = "mean",
to_agg = "x",
agg_name = "Promedio",
group_var = c("clarity", "cut"))
data_expect <- data |>
dplyr::group_by(clarity, cut) |>
dplyr::summarise(Promedio = mean(x, na.rm = TRUE))
expect_equal(data_result, data_expect)
data <- data.frame(name = c("D", "E", "F"), y = c(15, 25, 35))
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = "y",
group_var = "name")
expect_equal(data_result, data, ignore_attr = TRUE)
# dates <- seq(as.POSIXct("2022-01-01"), as.POSIXct("2022-01-10"), by = "day")
# values <- rnorm(length(dates))
# data <- data.frame(date = dates, value = values)
# data_result <- aggregation_data(data = data,
#                                 agg = "sum",
#                                 to_agg = "value",
#                                 group_var = "date")
})
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all(".")
data <- ggplot2::diamonds
dataptc <- data |> select(cut, color, price)
data_result <- aggregation_data(data = dataptc,
agg = "mean", to_agg = "price",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_col = "color")
View(data_result)
devtools::load_all()
devtools::document()
devtools::install()
dataptc <- data |> select(cut, color, price)
data_result <- aggregation_data(data = dataptc,
agg = "mean", to_agg = "price",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_col = "cut")
View(data_result)
dataptc <- data |> select(cut, color, price)
data_result <- aggregation_data(data = dataptc,
agg = "mean", to_agg = "price",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_col = "cut")
data_result2 <- aggregation_data(data = dataptc,
agg = "mean", to_agg = "price",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_col = "color")
View(data_result)
View(data_result2)
devtools::load_all(".")
devtools::load_all(".")
data <- ggplot2::diamonds
dataptc <- data |> select(cut, color, price)
data_result <- aggregation_data(data = dataptc,
agg = "mean", to_agg = "price",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_col = "cut")
data_result2 <- aggregation_data(data = dataptc,
agg = "mean", to_agg = "price",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_col = "color")
View(data_result)
View(data_result2)
devtools::load_all(".")
data_result2 <- aggregation_data(data = dataptc,
agg = "mean", to_agg = "price",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_col = "color")
data_result <- aggregation_data(data = dataptc,
agg = "mean", to_agg = "price",
group_var = c("cut", "color"),
percentage = TRUE,
percentage_col = "cut")
View(data_result)
View(data_result2)
devtools::load_all()
devtools::document()
devtools::install()
url <- "https://datos-prueba.cdmx.gob.mx/api/3/action/"
linkInfo <- "5d21d268-6d67-4b86-ace5-43a249d786cf"#"a83bb00d-ea9c-4a36-9b2e-7aa5015e64ef"
generalUrl <- paste0(url, "resource_show?id=")
print(generalUrl)
linkInfo <- paste0(generalUrl, linkInfo)
listConf <- jsonlite::fromJSON(linkInfo)
file <- listConf$result$url
#df1 <- read.table(file = file, nrows = 100,skip = 100, sep = ",")
df <- data.table::fread(file, na.strings = "NaN")
View(listConf)
View(df)
df <- df |> select(fecha, edad)
View(df)
df1 <- df |> group_by(fecha) |> summarise(total = sum(edad))
View(df1)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"))
View(data_result)
devtools::load_all(".")
df <- df |> select(fecha, edad)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"))
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
?sum
devtools::load_all(".")
df <- df |> select(fecha, edad)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
devtools::load_all(".")
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
devtools::load_all(".")
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
devtools::load_all(".")
df <- df |> select(fecha, edad)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
View(data_result)
devtools::load_all(".")
df <- df |> select(fecha, edad)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
View(data_result)
devtools::load_all(".")
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
devtools::load_all(".")
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
View(data_result)
devtools::load_all(".")
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = TRUE)
View(data_result)
devtools::load_all(".")
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = TRUE)
do.call("sum", list(c(1, 2, 3)))
do.call("sum", list(c(1, 2, 3, NA)))
devtools::load_all(".")
df <- df |> select(fecha, edad)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = TRUE)
View(data_result)
sum(1:5, NA, na.rm = TRUE)
sum(1:5, NA, na.rm = FALSE)
devtools::load_all(".")
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = TRUE)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = F)
View(data_result)
devtools::load_all()
devtools::document()
devtools::install()
url <- "https://datos-prueba.cdmx.gob.mx/api/3/action/"
linkInfo <- "e0836676-6682-49b6-b8ce-f4ec5677042c"#"a83bb00d-ea9c-4a36-9b2e-7aa5015e64ef"
generalUrl <- paste0(url, "resource_show?id=")
print(generalUrl)
linkInfo <- paste0(generalUrl, linkInfo)
listConf <- jsonlite::fromJSON(linkInfo)
file <- listConf$result$url
#df1 <- read.table(file = file, nrows = 100,skip = 100, sep = ",")
df <- data.table::fread(file, na.strings = "NaN")
library(ltgeo)
df <- df |> group_by(alcaldia) |> summarise(conteo = n())
lt_choropleth(data = df, map_name = "cdmx_mayors")
df <- homodatum::sample_data("Cat-Cat-Num")
library(homodatum)
df <- homodatum::sample_data("Cat-Cat-Num")
df
group_var <- names(df)[1:2]
df[,group_var][is.na(df[,group_var])] <- "hola"
View(df)
devtools::load_all()
devtools::document()
devtools::install()
data <- ggplot2::diamonds
data_result <- numeric_sort(data, col_num = "carat", sort = "desc")
devtools::load_all(".")
devtools::load_all(".")
data <- ggplot2::diamonds
data_result <- numeric_sort(data, col_num = "carat", sort = "desc")
data_result <- numeric_sort(data, col_num = "carat", sort = "desc", slice_n = 5)
df <- df |> group_by(alcaldia) |> summarise(conteo = n())
url <- "https://datos-prueba.cdmx.gob.mx/api/3/action/"
linkInfo <- "e0836676-6682-49b6-b8ce-f4ec5677042c"#"a83bb00d-ea9c-4a36-9b2e-7aa5015e64ef"
generalUrl <- paste0(url, "resource_show?id=")
print(generalUrl)
linkInfo <- paste0(generalUrl, linkInfo)
listConf <- jsonlite::fromJSON(linkInfo)
file <- listConf$result$url
#df1 <- read.table(file = file, nrows = 100,skip = 100, sep = ",")
df <- data.table::fread(file, na.strings = "NaN")
df <- df |> group_by(alcaldia) |> summarise(conteo = n())
df
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "no",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
data = df
col_cat = "alcaldia"
col_num = "conteo"
sort = "no"
slice_n = 5
order = NULL
order_legend = NULL
label_wrap = NULL
label_wrap_legend = NULL
new_line = "<br/>"
sort = NULL
sort_by_cat = FALSE
sort = "no"
if (is.null(data)) {
stop("The data object must be specified")
}
class_data <- class(data)
class_data
if ("fringe" %in% class_data) data <- data$data
if (!is.null(col_num)) {
if (sort == "no") sort <- NULL
if (!is.null(sort)) {
print("in sort")
data <- data |>
numeric_sort(col_num, col_cat, sort = sort,
slice_n = slice_n, intra_cat = intra_cat
)
}
}
devtools::load_all(".")
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "no",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
devtools::load_all(".")
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data(data = df,
col_cat = NULL,#"alcaldia",
col_num = "conteo",
sort = "desc",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",sort_by_cat = F,
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
devtools::load_all(".")
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
sort_by_cat = F,
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
sort_by_cat = T,
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
devtools::load_all(".")
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
sort_by_cat = T,
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
data <- ggplot2::diamonds
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = c("x", "y"),
agg_name = c("Suma x", "Suma y"),
group_var = c("cut"))
View(data_result)
View(data)
url <- "https://datos-prueba.cdmx.gob.mx/api/3/action/"
linkInfo <- "5d21d268-6d67-4b86-ace5-43a249d786cf"#"a83bb00d-ea9c-4a36-9b2e-7aa5015e64ef"
generalUrl <- paste0(url, "resource_show?id=")
print(generalUrl)
linkInfo <- paste0(generalUrl, linkInfo)
listConf <- jsonlite::fromJSON(linkInfo)
file <- listConf$result$url
#df1 <- read.table(file = file, nrows = 100,skip = 100, sep = ",")
df <- data.table::fread(file, na.strings = "NaN")
df <- df |> select(fecha, consumo_agua, edad)
data_result <- aggregation_data(data = df,
agg = "sum",
to_agg = c("consumo_agua", "edad"),
agg_name = NULL,
group_var = c("fecha"))
df$fecha <- as.character(df$fecha)
data_result <- aggregation_data(data = df,
agg = "sum",
to_agg = c("consumo_agua", "edad"),
agg_name = NULL,
group_var = c("fecha"))
View(data_result)
data_result <- aggregation_data(data = df,
agg = "sum",
to_agg = c("consumo_agua", "edad"),
agg_name = NULL,
group_var = c("fecha"), na_rm = F)
View(data_result)
