data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = FALSE)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = TRUE)
View(data_result)
sum(1:5, NA, na.rm = TRUE)
sum(1:5, NA, na.rm = FALSE)
devtools::load_all(".")
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = TRUE)
data_result <- aggregation_data(data = df,
agg = "sum", to_agg = "edad",
group_var = c("fecha"), na_rm = F)
View(data_result)
devtools::load_all()
devtools::document()
devtools::install()
url <- "https://datos-prueba.cdmx.gob.mx/api/3/action/"
linkInfo <- "e0836676-6682-49b6-b8ce-f4ec5677042c"#"a83bb00d-ea9c-4a36-9b2e-7aa5015e64ef"
generalUrl <- paste0(url, "resource_show?id=")
print(generalUrl)
linkInfo <- paste0(generalUrl, linkInfo)
listConf <- jsonlite::fromJSON(linkInfo)
file <- listConf$result$url
#df1 <- read.table(file = file, nrows = 100,skip = 100, sep = ",")
df <- data.table::fread(file, na.strings = "NaN")
library(ltgeo)
df <- df |> group_by(alcaldia) |> summarise(conteo = n())
lt_choropleth(data = df, map_name = "cdmx_mayors")
df <- homodatum::sample_data("Cat-Cat-Num")
library(homodatum)
df <- homodatum::sample_data("Cat-Cat-Num")
df
group_var <- names(df)[1:2]
df[,group_var][is.na(df[,group_var])] <- "hola"
View(df)
devtools::load_all()
devtools::document()
devtools::install()
data <- ggplot2::diamonds
data_result <- numeric_sort(data, col_num = "carat", sort = "desc")
devtools::load_all(".")
devtools::load_all(".")
data <- ggplot2::diamonds
data_result <- numeric_sort(data, col_num = "carat", sort = "desc")
data_result <- numeric_sort(data, col_num = "carat", sort = "desc", slice_n = 5)
df <- df |> group_by(alcaldia) |> summarise(conteo = n())
url <- "https://datos-prueba.cdmx.gob.mx/api/3/action/"
linkInfo <- "e0836676-6682-49b6-b8ce-f4ec5677042c"#"a83bb00d-ea9c-4a36-9b2e-7aa5015e64ef"
generalUrl <- paste0(url, "resource_show?id=")
print(generalUrl)
linkInfo <- paste0(generalUrl, linkInfo)
listConf <- jsonlite::fromJSON(linkInfo)
file <- listConf$result$url
#df1 <- read.table(file = file, nrows = 100,skip = 100, sep = ",")
df <- data.table::fread(file, na.strings = "NaN")
df <- df |> group_by(alcaldia) |> summarise(conteo = n())
df
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "no",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
data = df
col_cat = "alcaldia"
col_num = "conteo"
sort = "no"
slice_n = 5
order = NULL
order_legend = NULL
label_wrap = NULL
label_wrap_legend = NULL
new_line = "<br/>"
sort = NULL
sort_by_cat = FALSE
sort = "no"
if (is.null(data)) {
stop("The data object must be specified")
}
class_data <- class(data)
class_data
if ("fringe" %in% class_data) data <- data$data
if (!is.null(col_num)) {
if (sort == "no") sort <- NULL
if (!is.null(sort)) {
print("in sort")
data <- data |>
numeric_sort(col_num, col_cat, sort = sort,
slice_n = slice_n, intra_cat = intra_cat
)
}
}
devtools::load_all(".")
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "no",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
devtools::load_all(".")
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data(data = df,
col_cat = NULL,#"alcaldia",
col_num = "conteo",
sort = "desc",
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",sort_by_cat = F,
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
devtools::load_all(".")
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
sort_by_cat = F,
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
sort_by_cat = T,
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
devtools::load_all(".")
dsdataprep::wrap_sort_data(data = df,
col_cat = "alcaldia",
col_num = "conteo",
sort = "desc",
sort_by_cat = T,
#label_wrap = opts$label_wrap,
#label_wrap_legend = opts$label_wrap_legend,
#sort = opts$sort,
slice_n = 5)
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
data <- ggplot2::diamonds
data_result <- aggregation_data(data = data,
agg = "sum",
to_agg = c("x", "y"),
agg_name = c("Suma x", "Suma y"),
group_var = c("cut"))
View(data_result)
View(data)
url <- "https://datos-prueba.cdmx.gob.mx/api/3/action/"
linkInfo <- "5d21d268-6d67-4b86-ace5-43a249d786cf"#"a83bb00d-ea9c-4a36-9b2e-7aa5015e64ef"
generalUrl <- paste0(url, "resource_show?id=")
print(generalUrl)
linkInfo <- paste0(generalUrl, linkInfo)
listConf <- jsonlite::fromJSON(linkInfo)
file <- listConf$result$url
#df1 <- read.table(file = file, nrows = 100,skip = 100, sep = ",")
df <- data.table::fread(file, na.strings = "NaN")
df <- df |> select(fecha, consumo_agua, edad)
data_result <- aggregation_data(data = df,
agg = "sum",
to_agg = c("consumo_agua", "edad"),
agg_name = NULL,
group_var = c("fecha"))
df$fecha <- as.character(df$fecha)
data_result <- aggregation_data(data = df,
agg = "sum",
to_agg = c("consumo_agua", "edad"),
agg_name = NULL,
group_var = c("fecha"))
View(data_result)
data_result <- aggregation_data(data = df,
agg = "sum",
to_agg = c("consumo_agua", "edad"),
agg_name = NULL,
group_var = c("fecha"), na_rm = F)
View(data_result)
data <- iris
dic <- homodatum::create_dic(data)
dic
names(dic) <- tolower(names(dic))
names(data) <- dic$id
unique(iris$Species)
var_inputs <- list("species" = c("versicolor", "virginica" ))
special_placeholder = NULL
.id = NULL
if (is.null(data) || is.null(dic)) return()
if (is.null(var_inputs) || !is.list(var_inputs)) return(data)
seq_along(var_inputs)
purrr::reduce(seq_along(var_inputs), function(df, .x) {
print(df)
print(.x)
if (!is.null(var_inputs[[.x]]) && !setequal(var_inputs[[.x]], "")) {
other_condition <- !is.null(special_placeholder) && setequal(var_inputs[[.x]], special_placeholder)
if (!other_condition) {
name_var <- names(var_inputs)[.x]
info_var <- dic |> dplyr::filter(id %in% name_var)
filter_var <- var_inputs[[.x]]
if (info_var$hdtype == "Dat" || info_var$hdtype == "Num") {
df <- filter_ranges(df, range = filter_var, by = info_var$id)
}
if (info_var$hdtype == "list") {
df <- filter_list(df, filter_var, info_var$id, .id = .id)
}
if (info_var$hdtype == "Cat") {
df <- df |> dplyr::filter(!!dplyr::sym(info_var$id) %in% filter_var)
}
}
}
df
}, .init = data)
df <- purrr::reduce(seq_along(var_inputs), function(df, .x) {
if (!is.null(var_inputs[[.x]]) && !setequal(var_inputs[[.x]], "")) {
other_condition <- !is.null(special_placeholder) && setequal(var_inputs[[.x]], special_placeholder)
if (!other_condition) {
name_var <- names(var_inputs)[.x]
info_var <- dic |> dplyr::filter(id %in% name_var)
filter_var <- var_inputs[[.x]]
if (info_var$hdtype == "Dat" || info_var$hdtype == "Num") {
df <- filter_ranges(df, range = filter_var, by = info_var$id)
}
if (info_var$hdtype == "list") {
df <- filter_list(df, filter_var, info_var$id, .id = .id)
}
if (info_var$hdtype == "Cat") {
df <- df |> dplyr::filter(!!dplyr::sym(info_var$id) %in% filter_var)
}
}
}
df
}, .init = data)
View(df)
names(data)
View(data)
data <- iris
dic <- homodatum::create_dic(data)
names(dic) <- tolower(names(dic))
names(data) <- dic$id
var_inputs <- list("species" = c("versicolor", "virginica" ),
"sepal_length", c(4, 5))
if (is.null(data) || is.null(dic)) return()
if (is.null(var_inputs) || !is.list(var_inputs)) return(data)
df <- purrr::reduce(seq_along(var_inputs), function(df, .x) {
if (!is.null(var_inputs[[.x]]) && !setequal(var_inputs[[.x]], "")) {
other_condition <- !is.null(special_placeholder) && setequal(var_inputs[[.x]], special_placeholder)
if (!other_condition) {
name_var <- names(var_inputs)[.x]
info_var <- dic |> dplyr::filter(id %in% name_var)
filter_var <- var_inputs[[.x]]
if (info_var$hdtype == "Dat" || info_var$hdtype == "Num") {
df <- filter_ranges(df, range = filter_var, by = info_var$id)
}
if (info_var$hdtype == "list") {
df <- filter_list(df, filter_var, info_var$id, .id = .id)
}
if (info_var$hdtype == "Cat") {
df <- df |> dplyr::filter(!!dplyr::sym(info_var$id) %in% filter_var)
}
}
}
df
}, .init = data)
devtools::load_all(".")
if (is.null(data) || is.null(dic)) return()
if (is.null(var_inputs) || !is.list(var_inputs)) return(data)
df <- purrr::reduce(seq_along(var_inputs), function(df, .x) {
if (!is.null(var_inputs[[.x]]) && !setequal(var_inputs[[.x]], "")) {
other_condition <- !is.null(special_placeholder) && setequal(var_inputs[[.x]], special_placeholder)
if (!other_condition) {
name_var <- names(var_inputs)[.x]
info_var <- dic |> dplyr::filter(id %in% name_var)
filter_var <- var_inputs[[.x]]
if (info_var$hdtype == "Dat" || info_var$hdtype == "Num") {
df <- filter_ranges(df, range = filter_var, by = info_var$id)
}
if (info_var$hdtype == "list") {
df <- filter_list(df, filter_var, info_var$id, .id = .id)
}
if (info_var$hdtype == "Cat") {
df <- df |> dplyr::filter(!!dplyr::sym(info_var$id) %in% filter_var)
}
}
}
df
}, .init = data)
data <- iris
dic <- homodatum::create_dic(data)
names(dic) <- tolower(names(dic))
names(data) <- dic$id
var_inputs <- list("species" = c("versicolor", "virginica" ),
"sepal_length", c(4, 5))
var_inputs <- list("species" = c("versicolor", "virginica" ),
"sepal_length"= c(4, 5))
df <- purrr::reduce(seq_along(var_inputs), function(df, .x) {
if (!is.null(var_inputs[[.x]]) && !setequal(var_inputs[[.x]], "")) {
other_condition <- !is.null(special_placeholder) && setequal(var_inputs[[.x]], special_placeholder)
if (!other_condition) {
name_var <- names(var_inputs)[.x]
info_var <- dic |> dplyr::filter(id %in% name_var)
filter_var <- var_inputs[[.x]]
if (info_var$hdtype == "Dat" || info_var$hdtype == "Num") {
df <- filter_ranges(df, range = filter_var, by = info_var$id)
}
if (info_var$hdtype == "list") {
df <- filter_list(df, filter_var, info_var$id, .id = .id)
}
if (info_var$hdtype == "Cat") {
df <- df |> dplyr::filter(!!dplyr::sym(info_var$id) %in% filter_var)
}
}
}
df
}, .init = data)
special_placeholder = NULL
.id = NULL
df <- purrr::reduce(seq_along(var_inputs), function(df, .x) {
if (!is.null(var_inputs[[.x]]) && !setequal(var_inputs[[.x]], "")) {
other_condition <- !is.null(special_placeholder) && setequal(var_inputs[[.x]], special_placeholder)
if (!other_condition) {
name_var <- names(var_inputs)[.x]
info_var <- dic |> dplyr::filter(id %in% name_var)
filter_var <- var_inputs[[.x]]
if (info_var$hdtype == "Dat" || info_var$hdtype == "Num") {
df <- filter_ranges(df, range = filter_var, by = info_var$id)
}
if (info_var$hdtype == "list") {
df <- filter_list(df, filter_var, info_var$id, .id = .id)
}
if (info_var$hdtype == "Cat") {
df <- df |> dplyr::filter(!!dplyr::sym(info_var$id) %in% filter_var)
}
}
}
df
}, .init = data)
View(df)
View(data)
View(df)
devtools::load_all(".")
devtools::load_all(".")
devtools::install_github("datasketch/paletero")
devtools::load_all(".")
devtools::load_all(".")
data <- iris
dic <- homodatum::create_dic(data)
names(dic) <- tolower(names(dic))
names(data) <- dic$id
var_inputs <- list("species" = c("versicolor", "virginica" ),
"sepal_length"= c(4, 5))
special_placeholder = NULL
.id = NULL
if (is.null(data) || is.null(dic)) return()
if (is.null(var_inputs) || !is.list(var_inputs)) return(data)
df <- purrr::reduce(seq_along(var_inputs), function(df, .x) {
if (!is.null(var_inputs[[.x]]) && !setequal(var_inputs[[.x]], "")) {
other_condition <- !is.null(special_placeholder) && setequal(var_inputs[[.x]], special_placeholder)
if (!other_condition) {
name_var <- names(var_inputs)[.x]
info_var <- dic |> dplyr::filter(id %in% name_var)
filter_var <- var_inputs[[.x]]
if (info_var$hdtype == "Dat" || info_var$hdtype == "Num") {
df <- filter_ranges(df, range = filter_var, by = info_var$id)
}
if (info_var$hdtype == "list") {
df <- filter_list(df, filter_var, info_var$id, .id = .id)
}
if (info_var$hdtype == "Cat") {
df <- df |> dplyr::filter(!!dplyr::sym(info_var$id) %in% filter_var)
}
}
}
df
}, .init = data)
filter_ranges <- function(data, range, by) {
if (is.null(data)) return()
min_date <- min(data[[by]], na.rm = TRUE)
max_date <- max(data[[by]], na.rm = TRUE)
if (length(range) == 2) {
if (min_date == range[1] & max_date == range[2]) {
data_filter <- data
} else {
print(range)
data_filter <- data |>
dplyr::filter(!!dplyr::sym(by) >= range[1] &
!!dplyr::sym(by) <= range[2])
}
} else {
data_filter <-  data |>
dplyr::filter(!!dplyr::sym(by) == range)
}
data_filter
}
df <- purrr::reduce(seq_along(var_inputs), function(df, .x) {
if (!is.null(var_inputs[[.x]]) && !setequal(var_inputs[[.x]], "")) {
other_condition <- !is.null(special_placeholder) && setequal(var_inputs[[.x]], special_placeholder)
if (!other_condition) {
name_var <- names(var_inputs)[.x]
info_var <- dic |> dplyr::filter(id %in% name_var)
filter_var <- var_inputs[[.x]]
if (info_var$hdtype == "Dat" || info_var$hdtype == "Num") {
df <- filter_ranges(df, range = filter_var, by = info_var$id)
}
if (info_var$hdtype == "list") {
df <- filter_list(df, filter_var, info_var$id, .id = .id)
}
if (info_var$hdtype == "Cat") {
df <- df |> dplyr::filter(!!dplyr::sym(info_var$id) %in% filter_var)
}
}
}
df
}, .init = data)
View(df)
View(data)
usethis::use_test("data-filter")
data <- iris
dic <- homodatum::create_dic(data)
names(dic) <- tolower(names(dic))
names(data) <- dic$id
var_inputs <- list("species" = c("versicolor", "virginica" ),
"sepal_length"= c(4, 5))
devtools::load_all(".")
devtools::load_all()
devtools::install_github("datasketch/paletero")
library(paletero)
devtools::load_all()
devtools::document()
devtools::install()
data <- iris
dic <- homodatum::create_dic(data)
names(dic) <- tolower(names(dic))
names(data) <- dic$id
data_result <- data_filter(data = data,
dic = dic,
var_inputs = list("species" = c("versicolor", "virginica" ),
"sepal_length"= c(4, 5)))
data_expected <- data |>
filter(species %in% c("versicolor", "virginica"),
sepal_length >= 4 & sepal_length <= 5)
expect_equal(data_result, data_expected)
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::load_all()
library(paletero)
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all(".")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
library(paletero)
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::load_all()
library(paletero)
devtools::document()
devtools::install()
